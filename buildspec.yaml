version: 0.2
env:
  git-credential-helper: yes
phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      - aws --version
      - curl 169.254.170.2$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI | jq 'to_entries | [ .[] | select(.key | (contains("Expiration") or contains("RoleArn"))  | not) ] |  map(if .key == "AccessKeyId" then . + {"key":"AWS_ACCESS_KEY_ID"} else . end) | map(if .key == "SecretAccessKey" then . + {"key":"AWS_SECRET_ACCESS_KEY"} else . end) | map(if .key == "Token" then . + {"key":"AWS_SESSION_TOKEN"} else . end) | map("export \(.key)=\(.value)") | .[]' -r > /tmp/cred.txt # work around https://github.com/hashicorp/terraform/issues/8746
      - chmod +x /tmp/cred.txt
      - . /tmp/cred.txt
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --region ${AWS_DEFAULT_REGION} --no-include-email)
  build:
    commands:
      - chmod +x scripts/codebuild-git-wrapper.sh
      - ./scripts/codebuild-git-wrapper.sh "$REPO_URL" "$REPO_BRANCH" # These environment variables come from the CFN stack
      - git log | head -100
      - echo Build started on `date`
      - echo Building the Docker image.....          
      - docker build -t ${IMAGE_REPO_NAME}:${CODEBUILD_RESOLVED_SOURCE_VERSION} .
      - docker tag ${IMAGE_REPO_NAME}:${CODEBUILD_RESOLVED_SOURCE_VERSION} ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${CODEBUILD_RESOLVED_SOURCE_VERSION}      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image.......
      - docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - printf '{"ImageURI":"%s"}' ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${CODEBUILD_RESOLVED_SOURCE_VERSION}  > imageDetail.json
      - sed -i 's/<APP_NAME>/'${IMAGE_REPO_NAME}'/g' appspec.yaml taskdef.json
      - sed -i 's/<SERVICE_PORT>/'${SERVICE_PORT}'/g' appspec.yaml taskdef.json
      - sed -i 's/<AWS_ACCOUNT_ID>/'${AWS_ACCOUNT_ID}'/g' taskdef.json
      - sed -i 's/<MEMORY_RESV>/'${MEMORY_RESV}'/g' taskdef.json
      - sed -i 's/<IMAGE_NAME>/'${AWS_ACCOUNT_ID}'\.dkr\.ecr\.'${AWS_DEFAULT_REGION}'\.amazonaws.com\/'${IMAGE_REPO_NAME}'\:'${CODEBUILD_RESOLVED_SOURCE_VERSION}'/g' taskdef.json
artifacts:
  files: 
    - imageDetail.json
    - appspec.yaml
    - taskdef.json